
package com.mntanproject.pos.item;

import com.mntanproject.pos.item.ItemCursor.Factory;
import io.objectbox.EntityInfo;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.internal.CursorFactory;
import io.objectbox.internal.IdGetter;

// THIS CODE IS GENERATED BY ObjectBox, DO NOT EDIT.

/**
 * Properties for entity "Item". Can be used for QueryBuilder and for referencing DB names.
 */
public final class Item_ implements EntityInfo<Item> {

    // Leading underscores for static constants to avoid naming conflicts with property names

    public static final String __ENTITY_NAME = "Item";

    public static final int __ENTITY_ID = 2;

    public static final Class<Item> __ENTITY_CLASS = Item.class;

    public static final String __DB_NAME = "Item";

    public static final CursorFactory<Item> __CURSOR_FACTORY = new Factory();

    @Internal
    static final ItemIdGetter __ID_GETTER = new ItemIdGetter();

    public final static Item_ __INSTANCE = new Item_();

    public final static io.objectbox.Property<Item> id =
        new io.objectbox.Property<>(__INSTANCE, 0, 1, long.class, "id", true, "id");

    public final static io.objectbox.Property<Item> name =
        new io.objectbox.Property<>(__INSTANCE, 1, 2, String.class, "name");

    public final static io.objectbox.Property<Item> barcode =
        new io.objectbox.Property<>(__INSTANCE, 2, 3, String.class, "barcode");

    public final static io.objectbox.Property<Item> notes =
        new io.objectbox.Property<>(__INSTANCE, 3, 4, String.class, "notes");

    public final static io.objectbox.Property<Item> quantityOnHand =
        new io.objectbox.Property<>(__INSTANCE, 4, 5, float.class, "quantityOnHand");

    public final static io.objectbox.Property<Item> purchasePrice =
        new io.objectbox.Property<>(__INSTANCE, 5, 6, float.class, "purchasePrice");

    public final static io.objectbox.Property<Item> sellingPrice =
        new io.objectbox.Property<>(__INSTANCE, 6, 7, float.class, "sellingPrice");

    @SuppressWarnings("unchecked")
    public final static io.objectbox.Property<Item>[] __ALL_PROPERTIES = new io.objectbox.Property[]{
        id,
        name,
        barcode,
        notes,
        quantityOnHand,
        purchasePrice,
        sellingPrice
    };

    public final static io.objectbox.Property<Item> __ID_PROPERTY = id;

    @Override
    public String getEntityName() {
        return __ENTITY_NAME;
    }

    @Override
    public int getEntityId() {
        return __ENTITY_ID;
    }

    @Override
    public Class<Item> getEntityClass() {
        return __ENTITY_CLASS;
    }

    @Override
    public String getDbName() {
        return __DB_NAME;
    }

    @Override
    public io.objectbox.Property<Item>[] getAllProperties() {
        return __ALL_PROPERTIES;
    }

    @Override
    public io.objectbox.Property<Item> getIdProperty() {
        return __ID_PROPERTY;
    }

    @Override
    public IdGetter<Item> getIdGetter() {
        return __ID_GETTER;
    }

    @Override
    public CursorFactory<Item> getCursorFactory() {
        return __CURSOR_FACTORY;
    }

    @Internal
    static final class ItemIdGetter implements IdGetter<Item> {
        @Override
        public long getId(Item object) {
            return object.id;
        }
    }

}
