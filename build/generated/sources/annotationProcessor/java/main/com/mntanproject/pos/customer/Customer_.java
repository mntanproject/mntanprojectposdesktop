
package com.mntanproject.pos.customer;

import com.mntanproject.pos.customer.CustomerCursor.Factory;
import io.objectbox.EntityInfo;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.internal.CursorFactory;
import io.objectbox.internal.IdGetter;

// THIS CODE IS GENERATED BY ObjectBox, DO NOT EDIT.

/**
 * Properties for entity "Customer". Can be used for QueryBuilder and for referencing DB names.
 */
public final class Customer_ implements EntityInfo<Customer> {

    // Leading underscores for static constants to avoid naming conflicts with property names

    public static final String __ENTITY_NAME = "Customer";

    public static final int __ENTITY_ID = 1;

    public static final Class<Customer> __ENTITY_CLASS = Customer.class;

    public static final String __DB_NAME = "Customer";

    public static final CursorFactory<Customer> __CURSOR_FACTORY = new Factory();

    @Internal
    static final CustomerIdGetter __ID_GETTER = new CustomerIdGetter();

    public final static Customer_ __INSTANCE = new Customer_();

    public final static io.objectbox.Property<Customer> id =
        new io.objectbox.Property<>(__INSTANCE, 0, 1, long.class, "id", true, "id");

    public final static io.objectbox.Property<Customer> name =
        new io.objectbox.Property<>(__INSTANCE, 1, 2, String.class, "name");

    public final static io.objectbox.Property<Customer> company =
        new io.objectbox.Property<>(__INSTANCE, 2, 3, String.class, "company");

    public final static io.objectbox.Property<Customer> contact =
        new io.objectbox.Property<>(__INSTANCE, 3, 4, String.class, "contact");

    public final static io.objectbox.Property<Customer> email =
        new io.objectbox.Property<>(__INSTANCE, 4, 5, String.class, "email");

    public final static io.objectbox.Property<Customer> street =
        new io.objectbox.Property<>(__INSTANCE, 5, 6, String.class, "street");

    public final static io.objectbox.Property<Customer> city =
        new io.objectbox.Property<>(__INSTANCE, 6, 7, String.class, "city");

    public final static io.objectbox.Property<Customer> state =
        new io.objectbox.Property<>(__INSTANCE, 7, 8, String.class, "state");

    public final static io.objectbox.Property<Customer> country =
        new io.objectbox.Property<>(__INSTANCE, 8, 9, String.class, "country");

    public final static io.objectbox.Property<Customer> bank =
        new io.objectbox.Property<>(__INSTANCE, 9, 10, String.class, "bank");

    public final static io.objectbox.Property<Customer> notes =
        new io.objectbox.Property<>(__INSTANCE, 10, 11, String.class, "notes");

    @SuppressWarnings("unchecked")
    public final static io.objectbox.Property<Customer>[] __ALL_PROPERTIES = new io.objectbox.Property[]{
        id,
        name,
        company,
        contact,
        email,
        street,
        city,
        state,
        country,
        bank,
        notes
    };

    public final static io.objectbox.Property<Customer> __ID_PROPERTY = id;

    @Override
    public String getEntityName() {
        return __ENTITY_NAME;
    }

    @Override
    public int getEntityId() {
        return __ENTITY_ID;
    }

    @Override
    public Class<Customer> getEntityClass() {
        return __ENTITY_CLASS;
    }

    @Override
    public String getDbName() {
        return __DB_NAME;
    }

    @Override
    public io.objectbox.Property<Customer>[] getAllProperties() {
        return __ALL_PROPERTIES;
    }

    @Override
    public io.objectbox.Property<Customer> getIdProperty() {
        return __ID_PROPERTY;
    }

    @Override
    public IdGetter<Customer> getIdGetter() {
        return __ID_GETTER;
    }

    @Override
    public CursorFactory<Customer> getCursorFactory() {
        return __CURSOR_FACTORY;
    }

    @Internal
    static final class CustomerIdGetter implements IdGetter<Customer> {
        @Override
        public long getId(Customer object) {
            return object.id;
        }
    }

}
