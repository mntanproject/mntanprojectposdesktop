package com.mntanproject.pos.item;

import com.mntanproject.pos.purchase.Purchase;
import io.objectbox.BoxStore;
import io.objectbox.Cursor;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.internal.CursorFactory;
import io.objectbox.relation.ToOne;
import java.util.List;

// THIS CODE IS GENERATED BY ObjectBox, DO NOT EDIT.

/**
 * ObjectBox generated Cursor implementation for "Item".
 * Note that this is a low-level class: usually you should stick to the Box class.
 */
public final class ItemCursor extends Cursor<Item> {
    @Internal
    static final class Factory implements CursorFactory<Item> {
        @Override
        public Cursor<Item> createCursor(io.objectbox.Transaction tx, long cursorHandle, BoxStore boxStoreForEntities) {
            return new ItemCursor(tx, cursorHandle, boxStoreForEntities);
        }
    }

    private static final Item_.ItemIdGetter ID_GETTER = Item_.__ID_GETTER;


    private final static int __ID_name = Item_.name.id;
    private final static int __ID_barcode = Item_.barcode.id;
    private final static int __ID_notes = Item_.notes.id;
    private final static int __ID_quantityOnHand = Item_.quantityOnHand.id;
    private final static int __ID_purchasePrice = Item_.purchasePrice.id;
    private final static int __ID_sellingPrice = Item_.sellingPrice.id;
    private final static int __ID_purchaseId = Item_.purchaseId.id;

    public ItemCursor(io.objectbox.Transaction tx, long cursor, BoxStore boxStore) {
        super(tx, cursor, Item_.__INSTANCE, boxStore);
    }

    @Override
    public final long getId(Item entity) {
        return ID_GETTER.getId(entity);
    }

    /**
     * Puts an object into its box.
     *
     * @return The ID of the object within its box.
     */
    @Override
    public final long put(Item entity) {
        ToOne<Purchase> purchase = entity.purchase;
        if(purchase != null && purchase.internalRequiresPutTarget()) {
            Cursor<Purchase> targetCursor = getRelationTargetCursor(Purchase.class);
            try {
                purchase.internalPutTarget(targetCursor);
            } finally {
                targetCursor.close();
            }
        }
        String name = entity.name;
        int __id1 = name != null ? __ID_name : 0;
        String barcode = entity.barcode;
        int __id2 = barcode != null ? __ID_barcode : 0;
        String notes = entity.notes;
        int __id3 = notes != null ? __ID_notes : 0;

        collect313311(cursor, 0, PUT_FLAG_FIRST,
                __id1, name, __id2, barcode,
                __id3, notes, 0, null,
                __ID_purchaseId, entity.purchase.getTargetId(), 0, 0,
                0, 0, 0, 0,
                0, 0, 0, 0,
                __ID_quantityOnHand, entity.quantityOnHand, 0, 0);

        long __assignedId = collect002033(cursor, entity.id, PUT_FLAG_COMPLETE,
                0, 0, 0, 0,
                __ID_purchasePrice, entity.purchasePrice, __ID_sellingPrice, entity.sellingPrice,
                0, 0, 0, 0,
                0, 0, 0, 0);

        entity.id = __assignedId;

        attachEntity(entity);
        return __assignedId;
    }

    private void attachEntity(Item entity) {
        // Transformer will create __boxStore field in entity and init it here:
        // entity.__boxStore = boxStoreForEntities;
    }

}
