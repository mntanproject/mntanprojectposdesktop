
package com.mntanproject.pos;

import com.mntanproject.pos.customer.Customer;
import com.mntanproject.pos.customer.CustomerCursor;
import com.mntanproject.pos.customer.Customer_;
import com.mntanproject.pos.supplier.Supplier;
import com.mntanproject.pos.supplier.SupplierCursor;
import com.mntanproject.pos.supplier.Supplier_;
import io.objectbox.BoxStore;
import io.objectbox.BoxStoreBuilder;
import io.objectbox.ModelBuilder;
import io.objectbox.ModelBuilder.EntityBuilder;
import io.objectbox.model.PropertyFlags;
import io.objectbox.model.PropertyType;

// THIS CODE IS GENERATED BY ObjectBox, DO NOT EDIT.
/**
 * Starting point for working with your ObjectBox. All boxes are set up for your objects here.
 * <p>
 * First steps (Android): get a builder using {@link #builder()}, call {@link BoxStoreBuilder#androidContext(Object)},
 * and {@link BoxStoreBuilder#build()} to get a {@link BoxStore} to work with.
 */
public class MyObjectBox {

    public static BoxStoreBuilder builder() {
        BoxStoreBuilder builder = new BoxStoreBuilder(getModel());
        builder.entity(Supplier_.__INSTANCE);
        builder.entity(Customer_.__INSTANCE);
        return builder;
    }

    private static byte[] getModel() {
        ModelBuilder modelBuilder = new ModelBuilder();
        modelBuilder.lastEntityId(2, 4422835441606432467L);
        modelBuilder.lastIndexId(0, 0L);
        modelBuilder.lastRelationId(0, 0L);

        buildEntitySupplier(modelBuilder);
        buildEntityCustomer(modelBuilder);

        return modelBuilder.build();
    }

    private static void buildEntitySupplier(ModelBuilder modelBuilder) {
        EntityBuilder entityBuilder = modelBuilder.entity("Supplier");
        entityBuilder.id(1, 118162346291892586L).lastPropertyId(11, 1748644272730123241L);
        entityBuilder.flags(io.objectbox.model.EntityFlags.USE_NO_ARG_CONSTRUCTOR);

        entityBuilder.property("id", PropertyType.Long).id(1, 4360497521093110839L)
                .flags(PropertyFlags.ID);
        entityBuilder.property("company", PropertyType.String).id(2, 8242346750859098379L);
        entityBuilder.property("name", PropertyType.String).id(3, 4036587380161241380L);
        entityBuilder.property("contactno", PropertyType.String).id(4, 2409824995150222284L);
        entityBuilder.property("email", PropertyType.String).id(5, 6202542901249867552L);
        entityBuilder.property("street", PropertyType.String).id(6, 8361255238221741965L);
        entityBuilder.property("city", PropertyType.String).id(7, 9169164741603846919L);
        entityBuilder.property("state", PropertyType.String).id(8, 7612731329295616645L);
        entityBuilder.property("country", PropertyType.String).id(9, 8583347077330895747L);
        entityBuilder.property("bank", PropertyType.String).id(10, 288799869396900120L);
        entityBuilder.property("notes", PropertyType.String).id(11, 1748644272730123241L);


        entityBuilder.entityDone();
    }

    private static void buildEntityCustomer(ModelBuilder modelBuilder) {
        EntityBuilder entityBuilder = modelBuilder.entity("Customer");
        entityBuilder.id(2, 4422835441606432467L).lastPropertyId(3, 6093348282066508667L);
        entityBuilder.flags(io.objectbox.model.EntityFlags.USE_NO_ARG_CONSTRUCTOR);

        entityBuilder.property("id", PropertyType.Long).id(1, 8970205849757570235L)
                .flags(PropertyFlags.ID);
        entityBuilder.property("name", PropertyType.String).id(2, 8842403407573568000L);
        entityBuilder.property("company", PropertyType.String).id(3, 6093348282066508667L);


        entityBuilder.entityDone();
    }


}
